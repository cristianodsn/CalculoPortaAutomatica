// <auto-generated />
using GatesCalculator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GatesCalculator.Migrations
{
    [DbContext(typeof(GatesCalculatorContext))]
    [Migration("20250304172931_Inicail")]
    partial class Inicail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GatesCalculator.Models.GuiaPortaDeAco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("GuiasPortaDeAco");
                });

            modelBuilder.Entity("GatesCalculator.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Motores");
                });

            modelBuilder.Entity("GatesCalculator.Models.MotorTesteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("MotoresTesteiras");
                });

            modelBuilder.Entity("GatesCalculator.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FormatoDeVenda")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProdutoGenericoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoGenericoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutoGenerico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProdutosPadraoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutosPadraoId");

                    b.ToTable("produtoGenericos");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutosPadrao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GuiaPortaAcoId")
                        .HasColumnType("integer");

                    b.Property<int>("SoleiraId")
                        .HasColumnType("integer");

                    b.Property<int>("TiraId")
                        .HasColumnType("integer");

                    b.Property<int>("TuboEixoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuiaPortaAcoId");

                    b.HasIndex("SoleiraId");

                    b.HasIndex("TiraId");

                    b.HasIndex("TuboEixoId");

                    b.ToTable("ProdutosPadrao");
                });

            modelBuilder.Entity("GatesCalculator.Models.Soleira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Soleiras");
                });

            modelBuilder.Entity("GatesCalculator.Models.Testeira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Testeiras");
                });

            modelBuilder.Entity("GatesCalculator.Models.Tira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Tiras");
                });

            modelBuilder.Entity("GatesCalculator.Models.TuboEixo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("TuboEixo");
                });

            modelBuilder.Entity("GatesCalculator.Models.GuiaPortaDeAco", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.Motor", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.MotorTesteira", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.Produto", b =>
                {
                    b.HasOne("GatesCalculator.Models.ProdutoGenerico", null)
                        .WithMany("Produtos")
                        .HasForeignKey("ProdutoGenericoId");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutoGenerico", b =>
                {
                    b.HasOne("GatesCalculator.Models.ProdutosPadrao", null)
                        .WithMany("ProdutoGenericos")
                        .HasForeignKey("ProdutosPadraoId");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutosPadrao", b =>
                {
                    b.HasOne("GatesCalculator.Models.GuiaPortaDeAco", "GuiaPortaDeAco")
                        .WithMany()
                        .HasForeignKey("GuiaPortaAcoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GatesCalculator.Models.Soleira", "Soleira")
                        .WithMany()
                        .HasForeignKey("SoleiraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GatesCalculator.Models.Tira", "Tira")
                        .WithMany()
                        .HasForeignKey("TiraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GatesCalculator.Models.TuboEixo", "TuboEixo")
                        .WithMany()
                        .HasForeignKey("TuboEixoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GuiaPortaDeAco");

                    b.Navigation("Soleira");

                    b.Navigation("Tira");

                    b.Navigation("TuboEixo");
                });

            modelBuilder.Entity("GatesCalculator.Models.Soleira", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.Testeira", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.Tira", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.TuboEixo", b =>
                {
                    b.HasOne("GatesCalculator.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutoGenerico", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("GatesCalculator.Models.ProdutosPadrao", b =>
                {
                    b.Navigation("ProdutoGenericos");
                });
#pragma warning restore 612, 618
        }
    }
}
